<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>eu.arrowhead</groupId>
	<artifactId>arrowhead</artifactId>
	<version>1.0.0</version>
	<packaging>pom</packaging>
	<modules>
		<module>model</module>
		<module>webservice</module>
		<module>service</module>
		<module>dnsdjava</module>
	</modules>
	<properties>
		<jersey.version>2.22.1</jersey.version>
		<log4j.version>1.2.17</log4j.version>
		<mvn.compiler.version>3.1</mvn.compiler.version>
		<mvn.glassfish.version>2.1</mvn.glassfish.version>
		<mvn.war.version>2.4</mvn.war.version>
		<mvn.tattletale.version>1.1.2.Final</mvn.tattletale.version>
		<dnsjava.version>2.1.0</dnsjava.version>
		<mysql.connector.version>5.1.6</mysql.connector.version>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>eu.arrowhead</groupId>
				<artifactId>model</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>eu.arrowhead</groupId>
				<artifactId>service</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>eu.arrowhead</groupId>
				<artifactId>dnsdjava</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j.version}</version>
			</dependency>

			<dependency>
				<groupId>dnsjava</groupId>
				<artifactId>dnsjava</artifactId>
				<version>${dnsjava.version}</version>
			</dependency>

			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql.connector.version}</version>
			</dependency>

			<dependency>
				<groupId>org.glassfish.jersey</groupId>
				<artifactId>jersey-bom</artifactId>
				<version>${jersey.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${mvn.compiler.version}</version>
					<inherited>true</inherited>
					<configuration>
						<source>1.7</source>
						<target>1.7</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.glassfish</groupId>
					<artifactId>maven-glassfish-plugin</artifactId>
					<version>${mvn.glassfish.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${mvn.war.version}</version>
					<configuration>
						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
								<classpathPrefix>lib/</classpathPrefix>
							</manifest>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.jboss.tattletale</groupId>
					<artifactId>tattletale-maven</artifactId>
					<version>${mvn.tattletale.version}</version>
					<executions>
						<execution>
							<!-- needs to run after WAR package has been built -->
							<phase>verify</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<source>${project.build.directory}/${project.build.finalName}/WEB-INF/lib</source>
						<destination>${project.reporting.outputDirectory}/tattletale</destination>
						<!--<reports> <report>jar</report> <report>multiplejars</report> <report>unusedjar</report> 
							<report>circulardependency</report> </reports> <profiles> <profile>java7</profile> 
							</profiles> -->
						<failOnWarn>false</failOnWarn>
						<failOnError>false</failOnError>
						<!-- excluding some jars, if jar name contains any of these strings 
							it won't be analyzed -->
						<!--<excludes> <exclude>rtls-mqtt</exclude> <exclude>rtls-service</exclude> 
							<exclude>spring-security-</exclude> </excludes> -->
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.4</version>
				<configuration>
					<reportPlugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-project-info-reports-plugin</artifactId>
							<version>2.8.1</version>
						</plugin>
						<!-- @Transactional cause error : http://stackoverflow.com/questions/27808734/jdk8-error-class-file-for-javax-interceptor-interceptorbinding-not-found-whe -->
						<!--<plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-javadoc-plugin</artifactId> 
							<version>2.10.3</version> </plugin> -->
					</reportPlugins>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>